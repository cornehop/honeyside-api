// <auto-generated />
using System;
using Honeyside.Api.Data.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Honeyside.Api.Data.Migrations
{
    [DbContext(typeof(HoneysideDbContext))]
    [Migration("20220523125338_EvChargeInit")]
    partial class EvChargeInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Honeyside.Api.Data.Entities.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryIsoCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.EvCharge", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EvChargingStationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Kwh")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("EvChargingStationID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("EvCharges");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.EvChargingStation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalIdentifier")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("EvChargingStations");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.Invoice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalIdentifier")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.EvCharge", b =>
                {
                    b.HasOne("Honeyside.Api.Data.Entities.EvChargingStation", "EvChargingStation")
                        .WithMany()
                        .HasForeignKey("EvChargingStationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Honeyside.Api.Data.Entities.Invoice", "Invoice")
                        .WithMany("EvCharges")
                        .HasForeignKey("InvoiceID");

                    b.Navigation("EvChargingStation");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.EvChargingStation", b =>
                {
                    b.HasOne("Honeyside.Api.Data.Entities.Address", "Address")
                        .WithMany("EvChargeStations")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.Address", b =>
                {
                    b.Navigation("EvChargeStations");
                });

            modelBuilder.Entity("Honeyside.Api.Data.Entities.Invoice", b =>
                {
                    b.Navigation("EvCharges");
                });
#pragma warning restore 612, 618
        }
    }
}
